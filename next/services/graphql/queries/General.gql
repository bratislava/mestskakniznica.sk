fragment SectionLinkPageEntity on PageEntity {
  id
  attributes {
    title
  }
}

fragment SectionLinkBranchEntity on BranchEntity {
  id
  attributes {
    slug
    title
  }
}

fragment MenuSection on ComponentMenuSections {
  id
  sectionTitle
  sectionColumnSpan
  sectionPage {
    data {
      ...PageWithBaseFieldsEntity
    }
  }
  sectionLinks(pagination: { limit: -1 }) {
    id
    sectionLinkTitle
    sectionLinkPage {
      data {
        ...SectionLinkPageEntity
      }
    }
    sectionLinkBranch {
      data {
        ...SectionLinkBranchEntity
      }
    }
  }
}

fragment MenuEntity on MenuEntity {
  id
  attributes {
    menuTitle
    menuTotalColumns
    order
    menuSections {
      ...MenuSection
    }
    createdAt
    updatedAt
  }
}

fragment ComponentFooterFooterColumn on ComponentFooterFooterColumn {
  id
  title
  footerLink {
    id
    redirectTo {
      data {
        ...PageWithBaseFieldsEntity
      }
    }
    title
    otherSite
  }
}

fragment FooterEntity on FooterEntity {
  id
  attributes {
    footerColumns {
      ...ComponentFooterFooterColumn
    }
    siteMapLink {
      data {
        ...PageWithBaseFieldsEntity
      }
    }
    privacyLink {
      data {
        ...PageWithBaseFieldsEntity
      }
    }
  }
}

fragment GeneralEntity on GeneralEntity {
  attributes {
    eventsPage {
      data {
        __typename
        id
      }
    }
    newBooksPage {
      data {
        __typename
        id
      }
    }
    privacyTermsAndConditionsPage {
      data {
        __typename
        id
      }
    }
    openingHoursPage {
      data {
        __typename
        id
      }
    }
    noticesPage {
      data {
        __typename
        id
      }
    }
  }
}

### Queries

query General($eventsFrom: DateTime!, $locale: I18NLocaleCode!) {
  menus(locale: $locale, sort: ["order:asc"]) {
    data {
      ...MenuEntity
    }
  }
  upcomingEvents: events(
    locale: $locale
    sort: "dateFrom:asc"
    pagination: { start: 0, limit: 4 }
    filters: { dateTo: { gte: $eventsFrom } }
  ) {
    data {
      ...EventCardEntity
    }
  }
  footer(locale: $locale) {
    data {
      ...FooterEntity
    }
  }
  general(locale: $locale) {
    data {
      ...GeneralEntity
    }
  }
}
